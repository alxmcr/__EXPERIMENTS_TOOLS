#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound} all this properties are added at JVM system properties at startup
${symbol_pound} here some default Apache TomEE system properties
${symbol_pound} for more information please see http://tomee.apache.org/properties-listing.html

${symbol_pound} allowed packages to be deserialized, by security we denied all by default, tune tomee.serialization.class.whitelist packages to change it
${symbol_pound} tomee.remote.support = true
tomee.serialization.class.blacklist = *
${symbol_pound} tomee.serialization.class.whitelist = my.package
${symbol_pound} Johnzon prevents too big string to be unserialized by default
${symbol_pound} You can either configure it by M${parentArtifactId}er/Parser instance or globally
${symbol_pound} With this property:
${symbol_pound} org.apache.johnzon.max-string-length = 8192

${symbol_pound} Should a jar with at least one EJB activate CDI for this module?
${symbol_pound} Spec says so but this can imply more (permgen) memory usage
${symbol_pound} openejb.cdi.activated-on-ejb = true

${symbol_pound} openejb.check.classloader = false
${symbol_pound} openejb.check.classloader.verbose = false

${symbol_pound} Activate EE default resources (ManagedExecutorService, JMSConnectionFactory if JMS is there...)openejb.environment.default = true

${symbol_pound} tomee.jaxws.subcontext = webservices
${symbol_pound} tomee.jaxws.oldsubcontext = false

${symbol_pound} if you want to propagate a deployment on a cluster when a tomcat cluster is defined
${symbol_pound} tomee.cluster.deployment = false

${symbol_pound} openejb.system.${parentArtifactId}s = true
${symbol_pound} openejb.servicemanager.enabled = true
${symbol_pound} openejb.jmx.active = false
${symbol_pound} openejb.descriptors.output = false
${symbol_pound} openejb.strict.interface.declaration = false
${symbol_pound} openejb.conf.file = conf/tomee.xml
${symbol_pound} openejb.debuggable-vm-hackery = false
${symbol_pound} openejb.validation.skip = false
${symbol_pound} openejb.webservices.enabled = true
${symbol_pound} openejb.validation.output.level = MEDIUM
${symbol_pound} openejb.user.mbeans.list = *
${symbol_pound} openejb.deploymentId.format = {${parentArtifactId}Id}/{ejbJarId}/{ejbName}
${symbol_pound} openejb.jndiname.format = {deploymentId}{interfaceType.annotationName}
${symbol_pound} openejb.deployments.package.include = .*
${symbol_pound} openejb.deployments.package.exclude =
${symbol_pound} openejb.autocreate.jta-datasource-from-non-jta-one = true
${symbol_pound} openejb.altdd.prefix =
${symbol_pound} org.apache.openejb.default.system.interceptors =
${symbol_pound} openejb.jndiname.failoncollision = true
${symbol_pound} openejb.wsAddress.format = /{ejbDeploymentId}
${symbol_pound} org.apache.openejb.server.webservices.saaj.provider =
${symbol_pound} openejb.nobanner = true
${symbol_pound} openejb.offline = false
${symbol_pound} openejb.jmx.active = true
${symbol_pound} openejb.exclude-include.order = include-exclude
${symbol_pound} openejb.additional.exclude =
${symbol_pound} openejb.additional.include =
${symbol_pound} openejb.crosscontext = false
${symbol_pound} openejb.jsessionid-support =
${symbol_pound} openejb.myfaces.disable-default-values = true
${symbol_pound} openejb.web.xml.major =
${symbol_pound} openjpa.Log =
${symbol_pound} openejb.jdbc.log = false
javax.persistence.provider = org.hibernate.jpa.HibernatePersistenceProvider
${symbol_pound} javax.persistence.transactionType =
javax.persistence.jtaDataSource = ds
${symbol_pound} javax.persistence.nonJtaDataSource =
ds = new://Resource?type=DataSource
ds.JdbcDriver = org.hsqldb.jdbc.JDBCDriver
ds.JdbcUrl = jdbc:hsqldb:hsql://localhost/xdb
ds.UserName = SA
ds.Password =
${symbol_pound}
${symbol_pound} Properties for JAS RS
${symbol_pound} openejb.jaxrs.${parentArtifactId}lication =
${symbol_pound} openejb.cxf-rs.wadl-generator.ignoreRequests = false
${symbol_pound} openejb.cxf-rs.wadl-generator.ignoreMessageWriters = true
${symbol_pound}
${symbol_pound} These properties are only for cxf service (SOAP webservices) and TomEE+
${symbol_pound} If you don't use special tricks and sun default implementation, uncommenting these 4 lines forces TomEE to use it without overhead at all =
${symbol_pound} javax.xml.soap.MessageFactory = com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl
${symbol_pound} javax.xml.soap.SOAPFactory = com.sun.xml.messaging.saaj.soap.ver1_1.SOAPFactory1_1Impl
${symbol_pound} javax.xml.soap.SOAPConnectionFactory = com.sun.xml.messaging.saaj.client.p2p.HttpSOAPConnectionFactory
${symbol_pound} javax.xml.soap.MetaFactory = com.sun.xml.messaging.saaj.soap.SAAJMetaFactoryImpl
${symbol_pound}
tomee.jpa.factory.lazy = true
